import requests
import cv2
import numpy as np
from PIL import Image
import json
import struct, time
import requests

cam.snap()

cv2_image = cv2.cvtColor(np.array(cam.raw_image), cv2.COLOR_RGB2BGR)

def detect_color_histogram(frame, color_range):
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
    mask = cv2.inRange(hsv, color_range[0], color_range[1])
    hist = cv2.calcHist([hsv], [0], mask, [256], [0, 256])
    return hist

# Define color ranges (you can adjust these values)
red_range = (np.array([0, 100, 100]), np.array([10, 255, 255]))
blue_range = (np.array([110, 50, 50]), np.array([130, 255, 255]))

# Detect the color histograms for red and blue
red_hist = detect_color_histogram(cv2_image, red_range)
blue_hist = detect_color_histogram(cv2_image, blue_range)

# Determine the detected color based on the histogram comparison
if cv2.compareHist(red_hist, blue_hist, cv2.HISTCMP_CORREL) > 0:
    detected_color = "Red"
else:
    detected_color = "Blue"


# Split the image into its color channels
b, g, r = cv2.split(cv2_image)

# Convert the image to grayscale
grey = cv2.cvtColor(cv2_image, cv2.COLOR_BGRA2GRAY)

# Create a PIL Image from the grayscale image
cam.show(grey)
image3 = Image.fromarray(grey)

# Calculate the sum of pixel values in the grayscale image
sum_grey = np.sum(grey)
textBox.innerText = repr(np.sum(grey))


# Define your Airtable API information
AIRTABLE_API_KEY = 'patZo7glYjRIjm8XO.71ae09e17b5bf9ce2d27d6183af4bf0a62eba1c25d59ad65aea367b92c181d03'
BASE_ID = 'appgVj5jAhsjfLmFU'
TABLE_NAME = 'tblkJ008IYvimY39n'
COLOR_ID = 'rec8dqmC2p4TOg5Fl'

# Create a record in Airtable with the detected color
url = f'https://api.airtable.com/v0/{BASE_ID}/{TABLE_NAME}/{COLOR_ID}'
headers = {
    'Authorization': f'Bearer {AIRTABLE_API_KEY}',
    'Content-Type': 'application/json',
}

# Define the data to be sent as a Python dictionary
data = {
    "fields": {
        "Color": detected_color,
    }
}

response = requests.patch(url, headers=headers, json=data)

if response.status_code == 200:
    print(f"Detected color: {detected_color} - Record created in Airtable")
else:
    print("Failed to create record in Airtable")
